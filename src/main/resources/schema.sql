CREATE TABLE VIDEOGAME_SAGA (
    ID INT NOT NULL AUTO_INCREMENT,
    TITLE varchar(255) not null,
    PRIMARY KEY (ID)
);

CREATE TABLE SAGA_RELATIONSHIP (
    SAGA_ID_1 INT NOT NULL,
    SAGA_ID_2 INT NOT NULL,
    PRIMARY KEY (SAGA_ID_1, SAGA_ID_2),
    FOREIGN KEY (SAGA_ID_1) REFERENCES VIDEOGAME_SAGA(ID),
    FOREIGN KEY (SAGA_ID_2) REFERENCES VIDEOGAME_SAGA(ID)
);

CREATE TABLE VIDEOGAME_GENRE (
    ID INT NOT NULL AUTO_INCREMENT,
    NAME varchar(255) not null,
    PRIMARY KEY (ID)
);

create table VIDEOGAME
(
    ID    int          not null AUTO_INCREMENT,
    TITLE varchar(100) not null,
    SAGA_ID INT,
    GENRE_ID INT,
    RELEVANCE INT,
    RELEASE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (ID),
    FOREIGN KEY (SAGA_ID) REFERENCES VIDEOGAME_SAGA(ID),
    FOREIGN KEY (GENRE_ID) REFERENCES VIDEOGAME_GENRE(ID)
);

create table PROMOTION
(
    ID           int not null AUTO_INCREMENT,
    VALID_FROM   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRICE        numeric(5, 2),
    VIDEOGAME_ID int not null,
    PRIMARY KEY (ID),
    CONSTRAINT fk_VIDEOGAME_ID_PROMOTION
        FOREIGN KEY (VIDEOGAME_ID)
            REFERENCES VIDEOGAME (ID)
);

create table STOCK
(
    ID      INT        not null AUTO_INCREMENT,
    AVAILABILITY boolean,
    LAST_UPDATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    VIDEOGAME_ID int        not null,
    PRIMARY KEY (ID),
    CONSTRAINT fk_VIDEOGAME_ID_STOCK
        FOREIGN KEY (VIDEOGAME_ID)
            REFERENCES VIDEOGAME (ID)
);

CREATE VIEW VIDEO_GAME_VIEW AS
SELECT VG.ID, VG.TITLE, VG.RELEASE_DATE, VGG.NAME AS GENRE, VGS.ID AS SAGA_ID, VG.RELEVANCE
FROM VIDEOGAME VG
LEFT JOIN VIDEOGAME_GENRE VGG ON VGG.ID = VG.GENRE_ID
INNER JOIN VIDEOGAME_SAGA VGS ON VGS.ID = VG.SAGA_ID
ORDER BY VG.RELEVANCE DESC;